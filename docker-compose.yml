version: "3.7"
services:
####################### POSTGRES DATABASE #######################
  db_postgres2:
    container_name: db_postgres2
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: '/var/lib/postgresql/data'
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
####################### PG_ADMIN #######################
  pgadmin:
    container_name: conteneur_pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    user: root
    ports:
      - "5050:80"
    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin:Z
####################### METRIQUE #######################
  metriques:
    container_name: conteneur_metriques
    image: elynefdc/metrics:latest
    restart: always
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "3000:80"
    depends_on:
      db_postgres2:
        condition: service_healthy
####################### OXYGEN #######################
  oxygene:
    container_name: conteneur_oxygene
    image: elynefdc/oxygen-cs:latest
    restart: always
    ports:
      - "5051:80"
    depends_on:
      db_postgres2:
        condition: service_healthy
    build:
      context: .
volumes:
    db:
